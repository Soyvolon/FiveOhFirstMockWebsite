@page "/trooper/{rawId}"
@inject RosterService _roster

@if (Loaded)
{
    if (Trooper is not null)
    {
        <div class="continer">
            <div class="row">
                <div class="col col-md-6 col-sm-12">
                    <TrooperDisplay Trooper="Trooper" />
                </div>
                <div class="col col-md-6 col-sm-12">
                    <AuthorizeView Policy="RequireNCO">
                        <Authorized>
                            <TrooperFlags Trooper="Trooper" />
                        </Authorized>
                    </AuthorizeView>
                </div>
            </div>
        </div>
    }
    else
    {
        <b>No trooper by that ID was found. Go <a href="/">home</a>.</b>
    }
}
else
{
    <em>Loading...</em>
}

@code {
    [Parameter]
    public string RawId { get; set; }

    public Trooper? Trooper { get; set; }
    public bool Loaded { get; set; } = false;

    protected override async Task OnParametersSetAsync()
    {
        Trooper = await _roster.GetTrooperAsync(RawId);

        Loaded = true;

        await base.OnParametersSetAsync();
    }
}
